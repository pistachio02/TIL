++++++++++++++++++++++

    function solution(s) {
        let answer = ""
        let func = function(x) {
            let newS = x.split("");
            for(let i = 0; i < newS.length; i = i+2) {
                newS[i] = newS[i].toUpperCase()
            };
            for(let i = 1; i < newS.length; i = i+2) {
                newS[i] = newS[i].toLowerCase()
            };
            return newS.join("");
        }
        let str = s.split(" ");
        answer = str.map((el) => func(el)).join(" ")
        return answer;
    }

++++++++++++++++++++++

    우선 어떠한 문자열이 입력되었을때 그 문자열의 짝수번째 인덱스는 대문자로, 홀수번째 인덱스는 소문자로 바꿔주는 함수 func()를 만들어줬다.
    s는 여러개의 단어들이 합쳐진 문자열이므로 우선 split을 통해 각각의 단어들을 분리시켜주고,
    그 각각의 단어들을 func()의 인자로 전달해 적용시켜준 뒤,
    다시 그 단어들을 하나의 문자열로 만들어줘서 리턴시키면 되는 문제였다.

    이 문제 풀 때 시간이 좀 오래 걸렸는데 이유는 for문 작성할때 i를 +1씩 해주는게 아니라 +2씩 해줬어야 했는데 자꾸 i+2로 했더니 오류가 나서 시간이 좀 오래 걸렸다. 다시 i = i+2로 수정해주니 바로 해결 되었다. 하로 for문을 다양하게 쓸 일이 없다보니 실수를 했다. 잊지말고 꼭 기억하자 이 부분.

++++++++++++++++++++++

    function toWeirdCase(s){
        return s.toUpperCase().replace(/(\w)(\w)/g, function(a){return a[0].toUpperCase()+a[1].toLowerCase();})
    }

++++++++++++++++++++++

    위에는 더 나은 풀이이다.
    정규표현식을 사용한것으로 보이는데 아직도 정규식은 참 익숙하지 않고 어렵다..
    어떻게 하면 정규식을 잘 공부 할 수 있을까..

    조금 검색해보니 /(\w)(\w)/ 이게 뜻하는 바가 연속된 두 문자 라는거 같다.
    그러니까 해석해보자면 s를 대문자로 다 바꾸고 연속된 두 문자들을 각각 뒤에 오는 함수대로 적용해줄건데,
    함수에는 첫번째 알파벳을 대문자, 두번째 알파벳을 소문자로 바꿔주고 있다.
    
    그러니까 정리하자면 예를 들어 단어 "apple"가 있을때 위 방법대로 replace를 적용하면,
    ap, pl, e 이런식으로 연속된 두 문자씩 뒤에 붙은 함수를 적용시킬거고,
    그런식으로 하면 Ap, Pl, E 가 될테니 결국엔 "ApPlE"가 된다, 이런 의미인 것 같다.

    근데 이거나 위에 내가 풀은거나 결과는 같지만 짧기는 이게 더 짧고 간단하고 속도는 더 느리다고 한다.
    function 부분을 계속 다시 정의해서 그런것 같다고 사람들은 말한다.
    그니까 ap, pl, e 이 부분을 각각 해줄때마다 function을 다시 정의해야 하니까 그런거같다고 말하는 것 같다.

    정리하자면 코드가 짧고 간단하긴 하지만 속도는 더 느리고,
    내가 푼 풀이는 코드가 길고 좀 복잡하지만 속도는 훨씬 더 빠르다는 장점이 있는 것 같다.

++++++++++++++++++++++
