++++++++++++++++++++++

    function solution(num) {
        var answer = 0;
        while(num !== 1) {
            if(num % 2 === 0) {
                num = num / 2;
                answer++;
            } else {
                num = num * 3 + 1;
                answer++;
            }
        }
        if(answer > 500){
            return -1
        }
        return answer;
    }

++++++++++++++++++++++

    문제 설명에도 있듯이 콜라츠 추측이라 함은 어떤 숫자던 아래의 과정을 반복하면 1이 된다 라는 추측이다.
    
        1-1. 수가 짝수라면 2로 나눈다.
        1-2. 수가 홀수라면 3을 곱하고 1을 더한다.
        2. 결과로 나온 수에 같은 작업을 1이 될 때까지 반복한다.
    
    리턴시켜야 하는 값은 몇번 위 과정을 반복해야 숫자가 1이 될까? 라는것인데,
    여기서 추가 조건으로 붙은게 만약 위 과정을 500번 이상 반복해도 숫자가 1이 안되면 걍 그만하고 -1을 리턴시켜라 라는것이었다.

    즉 숫자가 1이 될때까지 위 과정들을 반복하고 총 몇번을 반복했는지를 리턴시켜야 하는데,
    만약 500번 이상 반복했는데도 숫자가 1이 안되면 그냥 -1을 리턴시켜라 라는것이다.

    우선 while반복문으로 num이 1이 아닐때만 위 과정들을 실행해주는 코드를 짜봤다.
    그렇게 되면 answer에는 총 몇번 반복했는지가 담기게 되는데 어쨌던 진짜로 위 과정들을 계속 반복하면 어떤 숫자던 1이 되는 것 같긴 하다.
    암튼 그렇게 해서 구한 answer를 확인해봤을때 500 이하라면 그대로 answer를 리턴시켜주고, 만약 500 이상이라면 -1을 리턴시켜주는 코드로 짜봤다.
    다행히도 잘 통과가 되었다.

    더 나은 풀이 에서도 비슷하게 while문을 사용해서 문제를 풀었던 것 같은데,
    다만 while문 조건을 조금 다르게 하고,
    삼항연산자를 사용해 코드의 길이를 좀 더 줄였다는게 차이였다.

    어쨌던 그래도 문제 푸는데 오래 걸리진 않았던 것 같아서 좋았다.

++++++++++++++++++++++
