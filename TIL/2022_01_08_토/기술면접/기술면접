++++++++++++++++++++++

    전송계층?

    기존에 TCP & UDP를 한번 다뤄봤기 때문에 이번에는 간단하게 정리하고 넘어가보겠다.

    이전에 정의했던 간단한 전송계층의 정의는?
    ㄴ OSI 7계층의 한 부분에 속하고 양 끝단(End to End)의 사용자들이 신뢰성 있는 데이터를 주고받을 수 있도록 하게 해주어 상위 계층에서 데이터 전달의 유효성, 효율성을 생각하지 않도록 해준다.

    좀 더 쉽게 설명하자면?
    ㄴ 이전에 먼저 다뤘던 네트워크 계층에서는 데이터를 보내는 처음 시작점에서 데이터를 받는 끝점까지 데이터를 이동 시킬 때 최적의 경로를 찾아서 데이터를 전달해주는 역할을 한다고 했었는데, 말 그대로 최적의 경로를 찾아서 데이터를 보내줄 뿐, 데이터를 받는 끝점이 잘 존재하는지, 존재한다면 데이터를 받을 준비가 되었는지, 준비가 되었더라도 전송 과정에서 데이터가 손상되거나 유실되지는 않았는지 등의 여러가지 문제들은 신경쓰지 않는다. 즉 데이터의 전송 순서나 완전성을 보장하기 않기 때문에 이러한 문제들을 처리해주는곳이 바로 전송계층이 되는것이다.

    ㄴ 데이터 전송 과정에서 아무 문제 없이 제대로 끝점까지 잘 도착하였는지, 데이터 전송을 제어하는 역할을 전송 계층이 담당하게 되고, 전송 과정 중 네트워크 혼잡 상황에 따라 데이터의 전송량을 조절하여 흐름을 제어하고, 전송의 오류를 점검해서 끝점까지 데이터가 안전하게 잘 도착했는지 확인해주는 역할을 하게 된다. 쉬운 말로 신뢰성 있는 데이터 전송을 보장하기 위해 존재하는 계층이라고 할 수 있다.

    주요 특징?
    ㄴ 네트워크 계층에선 컴퓨터와 컴퓨터 같의 데이터 전송을 담당했다면 전송계층에서는 컴퓨터 내부의 어플리케이션까지의 데이터 전송을 담당한다. 즉 host to host가 아니라 process to process가 되는것이다. 그렇다면 어떻게 한 컴퓨터 안의 여러가지 process중 정확하게 내가 전달하고 싶은 process로 데이터를 전달할 수 있는 것일까?
    ㄴ 그것은 바로 포트(Port)번호로 가능하다. 만약 IP 주소가 집주소라면 포트번호는 받는 사람의 이름이다. 우리가 소포를 보낼 때 한 집에 가족구성원 등 여러명의 사람이 존재하는데 이때 정확하게 내가 원하는 사람에게만 전달하고 싶다면 주소 포함 받는 사람 이름을 적듯이 데이터를 보낼때도 마찬가지이다. IP주소와 포트번호를 활용하면 정확하게 내가 원하는 process로 데이터를 전송할 수 있게 되는것이다.
    ㄴ 즉 포트 번호는 동일한 컴퓨터 안에서 통신을 하고 있는 여러 애플리케이션(즉 process)이 있을때 이를 식별할때 사용하는 주소라고 생각하면 이해하기가 쉽다.

++++++++++++++++++++++

    세션계층?

    응용 프로그램(애플리케이션)간의 연결을 성립하게 하고 연결이 안정되게 유지 및 관리하며 작업 완ㄹ 후 연결을 끊는 역할을 담당하는 계층이다. 

    물리계층에서 전송계층까지의 주된 기능은 단순히 데이터를 잘 전달하는것이었다. 이에 반해 세션계층에서 응용계층까지의 주된 기능은 데이터를 송수신 하는 양쪽 종점 컴퓨터 내의 프로세스 간의 통신 프로토콜 이라고 할 수 있다.

    즉 세션계층은 응용 프로그램 간의 소통을 유지하기 위한 구조를 제공하고 최소한의 기능으로 두 응용 프로그램 간 연결 설정, 유지, 및 종료를 담당하게 된다. 

    그 밖에도 데이터 분실 발생 시 분실 데이터의 복원을 위한 동기화 지점을 두어 상위 계층의 오류로 인한 데이터 손실을 복원한다.

    정리하자면 세션계층은 애플리케이션 간의 세션을 구축하고 관리하며 종료시키는 역할을 하는 계층이다.

    (뭔가 이 세션 계층에 대해서 더 알아보고 조금 더 이해하고 싶었지만 위 적은 내용들 외 추가적으로 더 딥하게 설명된 부분은 찾기가 힘들었다.)

++++++++++++++++++++++
