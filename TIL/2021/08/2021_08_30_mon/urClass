데이터베이스의 정규화? (Database Normalization)

-> 데이터베이스 정규화는 데이터베이스의 설계와 관련 있다. 데이터베이스 설계에 따라 데이터가 어떻게 저장될 지 그 구조를 결정하기 때문이다.

-> 이를 위해선 크게 3가지가 중요한데

    -> 첫째, Data Redundancy (데이터 중복)
        - 실제 데이터의 동일한 복사본이나 부분적인 복사본을 뜻한다. 이러한 중복 데이터를 통해 만약의 상황에 데이터를 복수할 때에 더 수월하게 할 수도 있겠지만, 대체로는 데이터베이스 내에서 몇가지 문제점을 지니는데, 일관된 자료 처리의 어려움, 저장공간 낭비, 데이터 효율성 감소 등이 있다.
    
    -> 둘째, Data Integrity (데이터의 온전함, 완전한 상태)
        - 데이터 무결성(data integrity)은 데이터의 수명 주기 동안 정확성과 일관성을 유지하는 것을 뜻한다. 다시 말해 입력된 데이터가 오염되지 않고, 입력된 그대로 데이터를 사용할 수 있다는 뜻이다.

    -> 셋째, Anomaly (데이터 이상 현상)
        - 데이터 이상 현상은 기대한 데이터와 다른, 이상 현상을 의미한다.
        - 3가지의 현상이 있을 수 있다.
            - 갱신 이상(update anomaly)
                - 갱신 이상(update anomaly)은 여러 행(레코드)에 걸쳐 동일한 데이터가 있을 때, 어떤 행을 갱신해야 하는지 논리적인 일관성이 없는 경우에 발생한다.
                - 예를 들면 한 테이블에서 같은 사람이 다른 값을 가지고 있는 경우, 값을 변경하려고 할때 같은 사람이 2개 이상의 다른 값을 가지고 있기때문에 어떤 값을 변경해야 하는지 모르기때문에 발생한다.
            - 삽입 이상(insertion anomaly)
                - 삽입 이상(insertion anomaly)은 데이터를 삽입하지 못하는 경우를 가리킨다.
                - 예를 들어 한 테이블에 새로운 사람의 정보를 입력 하려고 할때, 테이블에 있는 여러가지 행의 정보들이 모두 입력 되어야 하는데 그중 뭔가 부족할때, 다시 설명하자면 한 테이블이 있고 그 테이블은 한 사람의 이름, 주소, 연락처, 이메일주소 를 입력으로 받을 수 있는데, 새로운 사람의 정보를 입력하려고 할 때 위 4가지(이름, 주소, 연락처, 이메일주소) 중 하나라도 부족할 시 입력하지 못하는 삽입 이상이 발생할 수 있다.
            - 삭제 이상(deletion anomaly)
                - 삭제 이상(deletion anomaly)은 데이터의 특정 부분을 지울 때 의도치 않게 다른 부분도 함께 지우는, 이상 현상이다.
                - 예를 들어 테이블에 등록된 한 사람의 정보(이름, 주소, 연락처, 이메일주소)를 지우려고 할때 그 사람의 정보만 지우는것이 아닌 다른 모든 사람의 정보를 같이 지우는걸 뜻한다.



SQL의 종류?

-> SQL에는 다양한 문법이 있다. 그 다양한 문법들을 비슷한것끼리 분류하자면 아래와 같다.

    - Data Definition Language(DDL)
        - DDL(Data Definition Language)은 데이터를 정의할 때 사용하는 언어이다. 테이블을 만들 때 사용하는 CREATE 이나 테이블을 제거할 때 사용되는 DROP 등이 DDL에 해당한다. 데이터베이스의 테이블과 같은 오브젝트를 정의할 때 사용한다.

    - Data Manipulation Language(DML)
        - DML(Data Manipulation Language)은 데이터베이스에 데이터를 저장할 때 사용하는 언어이다. INSERT 처럼 새로운 레코드를 추가할 때 사용되는 문법을 포함해 데이터를 삭제하는 DELETE 나, 변경하는 UPDATE 가 DML에 포함된다.

    - Data Control Language(DCL)
        - DCL(Data Control Language)은 데이터베이스에 대한 접근 권한과 관련된 문법이다. 어느 유저가 데이터베이스에 접근할 수 있는지 권한을 설정한다. 권한을 주는 GRANT 나, 권한을 가져가는 REVOKE 등이 DCL에 포함된다.

    - Data Query Language(DQL)
        - DQL(Data Query Language)은 정해진 스키마 내에서 쿼리할 수 있는 언어이다. SELECT 가 DQL에 해당한다. 이렇게 언어를 분류했지만, DQL을 DML의 일부분으로 취급하기도 한다.

    - Transaction Control Language(TCL)
        - TCL(Transaction Control Language)은 DML을 거친 데이터의 변경사항을 수정할 수 있다. COMMIT 처럼 DML이 작업한 내용을 데이터베이스에 커밋하거나, ROLLBACK 처럼 커밋했던 내용을 다시 롤백하는 문법이 있다.



Subquery? (서브쿼리?)

-> 쿼리문을 작성할 때 다른 쿼리문을 포함할 수 있는데 이 때 포함되는 다른 쿼리문을 서브쿼리라고 한다. 서브쿼리는 실행되는 쿼리에 중첩으로 위치해 정보를 전달하는데 꼭 소괄호로 감싸야 한다.

예). 
    SELECT CustomerId, CustomerId = (SELECT CustomerId FROM customers WHERE CustomerId = 2)
    FROM customers
    WHERE CustomerId < 6


