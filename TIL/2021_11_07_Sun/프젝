++++++++++++++++++++++

    찜하기 기능 관련 서버쪽 코드를 작성해봤다.
    기능들을 간단히 보자면 아래와 같다.
    
    - 찜 목록 불러오기
    - 찜 등록하기
    - 찜 삭제하기
    
    그 외에도 내 게시글 목록 불러오기 관련 코드도 작성해봤다.
    기존에 페이지네이션 사용해서 전체 게시글 불러오기 했던것처럼 비슷하게 작성해봤는데,
    대신 이번엔 로그인한 유저의 정보를 가지고 그 해당 유저가 작성한 게시글 목록만 데이터베이스에서 받아와서 클라이언트로 넘겨주는 코드로 작성해봤다.
    만약 내 게시글 목록에서 삭제 기능까지 추가한다면 지금 한것에서 조금 더 추가적으로 코드를 짜봐야겠지만,
    전에 팀 회의때 얘기하기로는 내 게시글 목록에서 글 하나를 누르면 바로 해당 글 보기로 이동해서 그 안에서 다시 삭제 요청을 보내는것으로 얘기가 되서,
    우선은 내 게시글 목록에서 바로 삭제하는 기능을 넣어두진 않았다.
    이 부분에 대해선 어떻게 픽스가 될지 이따 회의때 다시 한 번 얘기 해봐야겠다.

    그리고 주의해야 할 점,
    찜 삭제하기 기능 시 delete 요청이 들어오는데, get 요청과 마찬가지로 delete 요청은 요청의 바디가 무시된다고 한다.
    그래서 만약 지금 짠 코드로 클라이언트와 같이 작업해봤을때 잘 작동하지 않으면, 구글에서 검색했던대로 요청의 바디가 잘 읽히는 방법대로 요청 시 수정을 조금 해볼 수 있을 것 같다.
    참고로 delete 요청 시 바디가 필요한 이유는, 어떤 찜을 지울것인지 알아야 하기 때문에,
    해당 유저가 지우고싶은 찜의 healing_id (즉 Healings 테이블의 id) 를 요청의 바디로 넘겨줘야 서버에서 보고 확인해서 지울 수 있기 때문이다.
    이 또한 팀원들과 같이 작업 시 얘기 나눠보자.

++++++++++++++++++++++

    회의때 찐 레포에 환경설정을 마치고 기본 세팅을 마쳤다.
    회의 후에는 동우님과 장희님과 같이 찐목록 기능구현, 내 게시글 목록 기능구현을 해봤다.
    전체적으로 보자면 마이페이지에 유저정보 조회, 수정, 및 회원탈퇴,
    찜 목록에 찜목록 조회, 찜 삭제,
    내 게시글 목록에 내가 쓴 게시글 목록 조회, 해당 게시글 클릭 시 게시글 한 개 보기에 들어가서 수정 및 삭제 가능, 댓글 등록 및 댓글 삭제 가능,
    이렇게 기능 구현을 해봤다.
    이제 기본적인 기능구현은 다 완료된거라, 짜잘한 오류나 보완사항들에 대해서만 수정을 하고, 나머지 css적인 부분만 보완하게 된다면 정말 프로젝트가 완료 될 것 같다.

    추가적으로 할 일은 아무래도 배포와, 발표자료 준비, 개인 발표 관련 자료준비 등이 있겠다.
    뭔가 잘 진행되고 있는것 같다가도 오류 하나에 걱정이 팍 되었다가,
    또 오늘같이 문제없이 잘 진행되는 날이면 또 괜찮게 잘 할 수 있을거같고, 참 요상하다.
    어쨌던 오늘 해야할 일들은 다 완료.

    내일은 건우님께서 랜딩페이지 관련 마무리가 얼추 되면 지금까지 작성한 코드들을 최신화 하기 위해 건우님부터 해서 동우님, 그리고 장희님까지
    코드들을 다 한곳에 모으고 통합하는 과정만 하면 괜찮을것 같다.

++++++++++++++++++++++