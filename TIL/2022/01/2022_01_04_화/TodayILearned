++++++++++++++++++++++

    new Date()

    ㄴ 날짜를 저장할 수 있고, 날짜와 관련된 메서드도 제공해주는 내장 객체이다.
    ㄴ 알고리즘 문제에서 풀었던것처럼 new Date(`2016-${a}-${b}`) 혹은 new Date('2016-2-19') 이렇게 하게 된다면, 인수로 전달된것이 문자열이라서 우선 자동으로 구문 분석되고, 또한 시간은 지정해주지 않았기때문에 GMT 자정이라고 가정해 코드가 실행되는 시간대에 따라 출력 문자열이 바뀌게 된다. 아래 예시를 보면 좀 더 쉽게 이해된다.

    let day =  new Date('2016-2-19')
    // 이렇게 해줬을때 단순히 아 day 는 '2016-2-19' 이겠구나 생각하지만
    // 실제로는 위 코드가 실행되는 시간대에 따라 Fri Feb 19 2016 00:00:00 GMT+0900 (한국 표준시) 이렇게 나올수도 있고, 다르게 나올 수 도 있다.
    // 시간을 보면 위에서 설명해줬듯 자동으로 자정이라고 가정을 하고 GMT 시간대에 따라 다르게 날짜가 표기될 수 도 있다.
    
    ㄴ 어쨌던 new Date()이라는 내장 객체를 사용하면 날짜를 불러올 수도 있고, 어떠한 변수에 할당해서 사용할 수 도 있다.

    .getDay()

    ㄴ 위에처럼 day라는 변수에 날짜를 할당해준 뒤 day.getDay()를 해주면 숫자 0부터 6까지 하나가 담겨지는데
    ㄴ 0은 일요일, 1은 월요일, 2는 화요일, 3은 수요일, 4는 목요일, 5는 금요일, 6은 토요일 이라는 뜻이다.
    ㄴ .getDay() 는 요일을 찾아주지만 문자열 형식으로 요일을 알려주진 않고 숫자로 알려주게 된다.
    ㄴ 아래 예시를 보면 조금 더 이해하기가 쉽다.

    let date =  new Date('2022-2-19');
    console.log(date) // Sat Feb 19 2022 00:00:00 GMT+0900 (한국 표준시)

    let day = date.getDay();
    console.log(day) // 6

    // 위를 보면 알 수 있듯이 2022년 2월 19일은 토요일이라고 알 수 있다.
    // 다시 한 번 콘솔에 찍어봐도 숫자 6이라고 나오는데, 이는 위에 설명했듯 숫자 6은 토요일이라는 의미로
    // 제일 처음 date를 콘솔에 찍었을때 Sat 이라고 나오지 않았더라도 day를 콘솔에 찍어보면 6을 나타내주기때문에 어떤 요일인지 알 수 가 있다. 

++++++++++++++++++++++

    오늘도 공부를 무사히 잘 마쳤다. 물론 중간에 잠시 쉬느라 어느새 새벽이 됐지만 그래도 오늘 하루 해야했던 공부는 다 한것 같다.
    내일도 모래도, 아니 그냥 매일매일 일어나서 눈뜨면 그날 하루를 오늘과 같이 보낼 수 있도록 노력하자.
    꾸준함, 내가 가지지 못한 가장 큰 단점이자 가지게 된다면 이전과는 다른 삶을 살 수 있게 되는 단 한가지.
    화이팅하자.

++++++++++++++++++++++