++++++++++++++++++++++

    RDBMS의 여러가지 주요 키들?

    총 5가지이다.

    1. 후보키(Candidate Key)
    2. 기본키(Primary Key)
    3. 대체키(Alternate Key)
    4. 슈퍼키(Super Key)
    5. 외래키(Foreign Key)

    우선 관계형 데이터베이스에서 Key가 뭘 의미하는것일까?
    ㄴ 키(Key)는 주어진 릴레이션(테이블)에서 모든 인스턴스를 서로 구분할 수 있는 하나 이상의 속성(애트리뷰트)들의 집합을 의미한다.

    위 설명만 보고 이해하자면 이해하기가 쉽지 않을것이다. 조금 더 쉽게 풀어서 설명해보자.

    키라 함은 우리가 데이터베이스를 만들었을때 여러가지 column 들이 있을 수 있는데 이때 이러한 column들을 서로 구분지을 수 있는, 다른 column과 구별할 수 있는 유일한 기준이 되는 속성이 키라고 보면 된다.

    1. 후보키는 말 그대로 후보이기 때문에 기본키가 될 수 있는 후보의 키라고 생각하면 쉽다. 후보키는 유일성(Unique)과 최소성(Minimality)을 만족시켜야 하는데 여기서 유일성은 값이 중복되어서는 안된다는 의미이고, 최소성은 레코드(행)를 식별하는 데 꼭 필요한 속성으로만 구성되어야 한다는 의미이다. 
    
    여기서 유일성은 그나마 쉽게 이해가 되는데 최소성은 뭘 의미하는거지?라고 쉽게 이해가 되지 않을 수 있다. 최소성을 조금 더 쉽게 설명해보자면 만약 유저정보 라는 테이블이 있고, 유저의 이름, 유저의 아이디, 유저의 주민번호 이렇게 쭉 정보가 있다고 가정해보자. 이때 유일성과 최소성을 둘 다 만족하는 키들은 유저의 아이디와 유저의 주민번호이다. 왜그러냐? 하나씩 설명해보자면, 우선 아이디랑 주민번호는 서로 다른 유저끼리 같은 데이터를 가질 수 없다. 즉 같은 이름의 유저라 하더라도 그 두사람이 같은 아이디나 같은 주민번호를 가질 수 없기에 이러한 뜻에서 유일성을 만족한다. 
    
    그렇다면 최소성은 뭘까? 최소성이라 함은 유저의 아이디나 주민번호를 각각 하나의 키로 분리해서 생각해 봤을때, 유저의 아이디만으로 혹은 유저의 주민번호 만으로 테이블에 있는 레코드(행)를 식별할 수 있나?라고 봤을때 둘 다 가능하기에 최소성을 만족하게 된다. 즉 유저의 아이디 만으로 많은 유저들의 정보가 있는 테이블에서 한 유저만을 식별할 수 있냐? 혹은 유저의 주민번호 만으로 많은 유저들의 정보가 있는 테이블에서 한 유저만을 식별할 수 있냐?를 봤을때 가능하다면 이럴때 우리는 최소성을 만족했다고 할 수 있다.

    2. 기본키는 위 후보키를 이해했다면 조금 더 빨리 쉽게 이해가 가능하다. 기본키라 함은 말 그대로 위 후보키들 중 하나를 선정한 키라고 볼 수 있는데, 위 설명했던 조건 두가지, 유일성과 최소성을 만족하면서 동시에 기본키로 지정하게 되면 그 기본키의 값은 NULL이 될 수 없기에 두가지 조건 + NULL값을 가질 수 없다는 조건, 이렇게 총 3가지 조건이 충족되면 기본키가 된다.

    3. 대체키라 함은 둘 이상의 후보키가 존재할 때 기본키를 제외한 나머지 후보키들을 말한다. 즉 2가지 이상의 후보키들이 있고, 우리가 그 여러가기 중 한가지를 선택해 기본키로 설정을 하면 나머지 후보키들은 대체키가 되는것이다. 그렇다면 아까도 설명했듯이 대체키도 후보키가 만족시키는 두가지 조건 유일성과 최소성을 만족시켜야 한다는 의미가 자동으로 된다.

    4. 슈퍼키를 설명하기 전에 후보키에 대해서 조금 더 설명을 해보자. 후보키는 유일성과 최소성을 만족시켜야 하는데 만약 제일 처음 예를 들었던 유저의 아이디와 유저의 주민번호를 다시 생각해보면, 각각의 column들은 따로 있땐 두가지 조건을 모두 만족시켜서 후보키가 되는것이라 했는데 만약 두가지 속성을 묶어서 키로 지정하면 어떻게 될까? 우리는 이를 복합키라고 한다. 복합키가 되면 유일성은 만족시킬 순 있지만 최소성은 위에 설명한대로 레코드(행)를 식별하는 데 꼭 필요한 속성으로만 구성되어야 한다는 의미로 두가지를 묶어서 합치게 된다면 최소성을 만족시킬 수 없다는 뜻이 된다. 이렇듯 유일성은 만족시키지만 최소성은 만족시키지 못하는 키를 슈퍼키라고 한다. 예를 들자면 유저의 이름과 유저의 아이디를 합친 키, 유저의 전화번호와 유저의 아이디를 합친 키, 유저의 주소와 유저의 아이디를 합친 키 등등 모두 복합키이면서 슈퍼키가 될 수 있다.

    5. 마지막으로 외래키에 대해서 설명해보자. 외래키는 사실상 여러가지 키 중 가장 중요하다고도 볼 수 있는데 이유는 우리가 애초에 다루고 있는 관계형 데이터베이스는 말 그대로 여러 테이블들이 서로 관계를 맺고 있기 때문에 그러한 역할을 위해 핵심적으로 중요한것이 외래키가 되기 때문이다. 

    우선 외래키의 정의를 내려보자면 관계를 맺고 있는 두가지 테이블 T1과 T2가 있다고 생각했을 때 테이블 T2가 참조하고 있는 T1의 기본키와 같은 값을 가지는 T2의 테이블 속성을 외래키라고 한다.

    역시나 정의만 가지고는 이해하기가 어려운데 예시를 들어서 설명해보자. 만약 유저의 아이디와 유저의 이름을 가지고 있는 테이블 T1이 있고, 아이디와 유저의 전화번호를 가지고 있는 테이블 T2가 있다고 가정해보자. T1의 아이디는 기본키로 설정해놨고, T2가 T1의 값을 참조하고 있을때 우리는 T2를 외래키라고 부른다. 그니까 쉽게 설명하자면 T2가 T1을 참조하고 있을때 그리고 T1이 기본키일때, T2는 외래키가 되는것이다.

    이때 조건이 하나 있는데, 만약 T2가 T1을 참조하게 되어서 외래키가 된다면 위 제일 처음 설명한대로 T2의 아이디 값들은 T1의 아이디 값과 동일해야 한다. 즉 T1의 아이디 중 없는 값을 T2가 가질 수 없다는 의미이다. 이러한 속성을 참조무결성이라고 부른다.

++++++++++++++++++++++
