++++++++++++++++++++++

    GET과 POST의 차이?

    우선 HTTP를 알아야 한다.
    
    HTTP는 웹상에서 클라이언트와 서버 간에 요청 및 응답으로 서로 데이터를 주고 받을 수 있도록 해주는 프로토콜이다. 클라이언트가 HTTP 프로토콜을 통해서 서버에게 어떠한 요청을 보내게 되면 서버는 해당 요청에 맞는 응답을 클라이언트에게 전송하게 되는데 이 때, HTTP 요청에 포함되는 HTTP 메소드는 서버가 요청을 수행하기 위해 해야할 행동을 표시하는 용도로 사용하게 된다. 
    
    이러한 HTTP 메소드들 중 GET과 POST의 특징과 차이점을 알아보자.

    GET

    서버로부터 정보를 조회하기 위해 설계된 메서드 이다.
    요청을 전송할 때 필요한 데이터를 Body에 담지 않고, 쿼리스트링을 통해 전달한다.
    쿼리스트링이라 함은 URL의 끝에 ?와 함께 이름과 값, 쌍을 이루는 요청 파라미터를 뜻한다.
    만약 요청 파라미터가 여러개이면 &로 연결한다. 
    예시는 아래와 같다.
        www.example-url.com/resources?name1=value1&name2=value2
    불필요한 요청을 제한하기 위해 요청이 캐시될 수 있다.

    POST

    리소스를 생성 및 변경하기 위해 설계된 메서드 이다.
    때문에 전송해야될 데이터를 HTTP 메세지의 Body에 담아 전송한다.
    이 Body는 길이 제한이 없다. 그래서 대용량 데이터를 전송할 수도 있다.
    URL에 표시되지 않고 Body에 데이터가 담긴다고 해서 안전한것은 아니다. 그렇기때문에 항상 민감한 정보는 암호화해서 전송해야 한다.
    요청 시 요청 헤더의 Content-Type에 요청 데이터의 타입을 표시해야 한다.
    만약 데이터 타입을 표시하지 않으면 서버는 내용이나 URL에 포함된 리소스의 확장자명 등으로 데이터 타입을 유추하게 된다.

    차이점?

    GET은 Idempotent, POST는 Non-idempotent하게 설계되어있다.
    멱등이라는것은 말 그대로 동일한 연산을 여러번 수행하더라도 동일한 결과가 나타나야 하는뜻인데, 서버에게 동일한 요청을 여러번 전송하더라도 응답이 항상 동일하게 돌아와야 한다는 의미의 메서드가 GET 메서드이고, 그 반대인 POST 메서드는 서버에게 동일한 요청을 여러번 전송하더라도 응답이 항상 다를 수 있다는 것을 의미하게 된다.

    실제 프로젝트 시 GET 요청을 할 때 body에 무언가를 넣고 요청을 보낼때 오류가 나거나 문제가 생기지 않아도 서버에서 body를 전달받지 못했던 이유가 바로 이러한 이유이다.

++++++++++++++++++++++
