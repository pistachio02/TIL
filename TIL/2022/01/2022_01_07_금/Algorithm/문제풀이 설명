++++++++++++++++++++++

    /*
        process.stdin.setEncoding('utf8');
        process.stdin.on('data', data => {
            const n = data.split(" ");
            const a = Number(n[0]), b = Number(n[1]);
            let arr1 = new Array(a).fill("*").join("")
            let arr2 = []
            for(let i = 0; i < b; i++) {
                arr2.push(arr1)
                console.log(arr2[i])
            }
        });
    */

++++++++++++++++++++++

    우선 기본 틀은 아래와 같았다.

    /*
        process.stdin.setEncoding('utf8');
        process.stdin.on('data', data => {
            const n = data.split(" ");
            const a = Number(n[0]), b = Number(n[1]);
            console.log(a);
            console.log(b);
        });
    */

++++++++++++++++++++++

    처음엔 어떻게 이 문제를 풀어야 할까 고민이 많았는데 그럴때 늘 하던 방법대로 코드가 어떻게 찍히는지 우선 코드 실행을 해봤다.
    그랬더니 콘솔에 찍히는게 만약 입력값이 5, 3 이라면 그대로 5 하고 3 이 찍히고 입력값이 2, 2 라면 그대로 2 하고 2 가 찍히는걸 볼 수 있었다.
    그렇다면 그 숫자의 길이만큼 *을 찍어야 하는데 어떻게 할 수 있을까? 생각을 하다가 우선 배열에 a의 길이만큼 *을 담아보자 해서 arr1에 할당을 해줬다. 그랬더니 입력값이 5,3 이라면 [*, *, *, *, *] 이렇게 담기는것이었다. 그러면 이걸 어떻게 또 3번을 반복해줘야 할까? 생각을 하다가 2차원 배열에 담으면 되겠다 싶어서 미리 빈 배열로 선언해줬던 arr2에 push를 해줬다. 물론 for 반복문 실행하면서.
    그렇게 했더니 2차원 배열이 완성 되었고, 그러면 이걸 어떻게 콘솔에 그냥 *만 찍히게 할 수 있을까 생각하다가 그냥 for 반복문 한번씩 돌때마다 콘솔에 배열 안에 담긴 값을 찍어주자 해서 console.log(arr2[i]) 를 해줬더니 통과가 되었다. 다행히도 입출력 예시 2가지의 경우만 통과된게 아니라 전체 케이스 다 통과를 할 수 있었다. 굿굿

++++++++++++++++++++++
