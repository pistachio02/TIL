++++++++++++++++++++++

    function solution(numbers) {
        var answer = [];
        let newArr = [];
        let newNumbs = numbers;
        
        while(newNumbs.length > 0) {
            for(let i = 1; i<numbers.length; i++){
                newArr.push(newNumbs[0] + newNumbs[i])
            }
            newNumbs.shift()
        }
        
        newArr.forEach((el) => {
            if(!answer.includes(el)) {
                answer.push(el)
            }
        })
        
        return answer.sort((a, b) => a-b);
    }

++++++++++++++++++++++

    숫자들로 채워진 배열을 전달받아,
    배열의 서로 다른 인덱스에 있는 숫자 2개를 뽑아 더해서 만들 수 있는 모든 수들을 오름차순으로 정렬해서 리턴하면 되는 문제이다.

    우선 제일 처음에 있는 숫자와 나머지 숫자들을 하나씩 더해서 나온 모든 수들을 새로운 배열에 담아줬다.
    그리고는 제일 처음에 있는 숫자는 지워버리고, 나머지 숫자들도 위와 같은 과정을 쭉 거쳤다, 숫자들이 모두 빌때까지.
    그렇게 하면 나올 수 있는 모든 숫자들이 새로운 배열에 담기게 되는데, 확인해보면 중복된 값들도 있게 된다.
    
    그래서 중복된 값들을 지워주기 위해, 새로운 배열에 담긴 모든 숫자들을 한번에 하나씩 answer에 담아줄건데,
    이때 조건으로 answer에 이미 포함되어 있다면 담지 말고, 새로운 숫자라면 담아준다 라고 조건을 걸어 담아준다.
    이렇게 하면 이제 중복된 값은 피해서 담아주게 되고,
    
    최종적으로 answer를 오름차순으로 정렬해서 리턴시켜주면 된다.

++++++++++++++++++++++
