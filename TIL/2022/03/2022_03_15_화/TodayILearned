++++++++++++++++++++++

    어제에 이어서 몽고DB관련 공부.

    샤딩이란?

    - 단일의 데이터를 다수의 데이터베이스로 쪼개어 나누는것(분할하는것)을 의미한다.
    - 단일의 데이터베이스에 저장하기 너무 큰 데이터일 때 사용한다.
    - 데이터를 구간별로 쪼개어 나눔으로써 노드에 무겁게 가지고 있던 데이터를 빠르게 검증할 수 있어 빠른 트랜잭션 속도를 가질 수 있게 된다.
    - 샤드란 샤딩을 통해 나누어진 블록들의 구간을 샤드라고 하고, 각각의 샤드는 데이터의 복사본이 아니라 데이터 그 자체를 의미한다.

    스케일 아웃이란?

    - 서버를 여러대 추가하여 시스템을 확장하는 방법을 말한다.

++++++++++++++++++++++

    - 어제 몽고DB는 설치해놨다.
    - mongo 를 터미널에 쳐서 몽고DB를 실행하고,
    - show dbs 를 쳐서 어떠한 db들이 있는지 확인했고,
    - 새로운 db를 하나 만들어줄거라 use test 라고 (test 가 새로 만들어줄 db의 이름이다) 쳐서 switched to db test 라는 답을 얻었고,
    - 그 상태에서 어떠한 값을 db에 넣어줘야 만들려고 했던 db가 정상적으로 생성되고, 값도 잘 넣어지게 된다.
    - 그래서 db.testingDB.insertOne({testNumber:1}) 라고 해서 testingDB 라는 이름의 collection 안에 .insertOne 메서드를 활용해서 {testNumber:1} 이라는 값을 넣어줬다.
    - show collections 를 통해 위에서 만들어준 testingDB 라는 collection 이 잘 만들어졌는지 우선 확인했고,
    - db.testingDB.find() 를 통해 아까 넣어준 값이 잘 들어가 있는지 확인했다.
    - { "_id" : ObjectId("622fd5e1d850847641eb1093"), "testNumber" : 1 } 라고 나왔고, 여기서 _id는 자동으로 생성된 값이고, 그 뒤 "testNumber" : 1 은 아까 내가 지정해서 넣어준 값이 같이 잘 확인되었다.
    - 몽고DB를 종료하려면 이전에 늘 했던대로 컨트롤 + c 를 해주면 된다.

++++++++++++++++++++++

    - db.collection.insertOne() = Inserts a single document into a collection.
    - db.collection.insertMany() = Inserts multiple documents into a collection.

    -

    - db.collection.updateOne() = Updates at most a single document that match a specified filter even though multiple documents may match the specified filter.
    - db.collection.updateMany() = Update all documents that match a specified filter.
    - db.collection.replaceOne() = Replaces at most a single document that match a specified filter even though multiple documents may match the specified filter.

    - db.collection.deleteOne() = Delete at most a single document that match a specified filter even though multiple documents may match the specified filter.
    - db.collection.deleteMany() = Delete all documents that match a specified filter.
    - db.collection.remove() = Delete a single document or all documents that match a specified filter.

++++++++++++++++++++++

    - db.collection을 만든 다른 방법?
    ㄴ use "db명"
    ㄴ db.createCollection("collection명", "넣고싶은 데이터가 있다면 이곳에 작성하고 안해도 되는 옵션이다")

++++++++++++++++++++++

    - db.collection.find() 를 하게되면 전체 데이터를 다 불러오는것이다.
    - db.collection.find({"찾고싶은특정Key" : "찾고싶은특정Value"}) 를 하게되면 찾고싶은 값만 가져오게 된다.
    - 보통 위와같이 .find()를 하게되면 등록된 데이터들의 _id값도 같이 리턴되는데, 만약 _id값 없이 나머지 데이터들의 필드만 가져오고싶다면 db.collection.find({"찾고싶은조건"}, {_id : 0}) 을 하면 된다.

++++++++++++++++++++++

    ~~~~~~~~~~

++++++++++++++++++++++

    회사 코드를 받아서 빠르게 한번 쭉 훑어본 뒤,
    구조가 어떻게 되는지 한번 살펴봤다.

    오늘은 기본적인 api 연습을 해야하는 날이기 때문에 아래 과정들을 한번 해보았다.
    (내일부터는 실제 프로젝트 관련 필요한 api들이 뭐가 있을지 한번 쭉 얘기 나눠보고, 어떤 기능을 누가 맡아서 진행해야할지 정해보는 날이다.)

    우선 클라이언트에서 서버로 요청을 보낼 때 서버에선 요청을 잘 받고 있는지 확인했고,
    정상적으로 요청을 잘 받는다는걸 확인한 뒤에는 그에대한 응답을 클라이언트로 보내주고,
    마지막으로 클라이언트에서는 다시 서버로부터 받은 응답이 잘 받아지고 있는지 확인해줬다.

    기본적으로 위 3개의 과정이 잘 된다면 클라이언트와 서버는 서로 잘 통신하고 있다는 의미이니,

    이제는 만약 클라이언트가 서버에게 DB에 담겨있는 여러가지 데이터들을 보내달라고 요청하게 된다면,
    서버에서는 관련 데이터들을 DB에 접근해 가져오고, 그 가져온 데이터들을 클라이언트에게 응답으로 잘 보내줘야 하기 때문에,
    
    몽고DB 로컬 저장소에서 데이터들을 불러오는 로직과, 새로 등록하는 로직을 작성해서,
    데이터를 등록하고 불러오는 과정이 잘 되는지 확인해보았다.
    
    전체적으로 기본 틀이 워낙 잘 잡혀있는 코드이다보니,
    기본적으로 작성된 코드들을 필요시마다 불러와서 활용하는 방법에 대해서 공부해봤고,
    DB 관련해서도 기존에 작성된 모델들이 많이 있어 그것들을 보면서 새로운 모델을 만들어 DB에 새로운 컬렉션을 만들어줬고,
    내가 만든 컬렉션에 문서가 잘 들어가지는지, 잘 불러와지는지 확인하는 과정들을 연습해보았다.

    물론 기본적인 CRUD 중 C 와 R에 대해서만 연습해본거라 완벽하진 않지만,
    그래도 기본적인 구조나 어떻게 코드가 짜여져있는지 파악하고 확인하는 연습을 계속 하다보니 조금씩 코드들이 눈에 들어왔고,
    머릿속에도 어느정도 그림이 그려졌다.

    CR을 했으니 UD는 어차피 몽고DB공식 문서나 기존에 작성된 코드들 보면서 참고해서 작성하면 가능한거라 나중에 시간 내서 따로 작성해보면 좋을 것 같다.

++++++++++++++++++++++

    빠르게 UD를 작성해보았다.
    다행히도 큰 어려움 없이 원했던대로 동작하는것 같다.
    이렇게 해서 memo라는 간단한 문장을 넣고, 불러오고, 수정하고, 삭제하는 api 연습을 해봤는데,
    아무래도 지금은 워낙 간단하기도 하고 다른 복잡한 과정이 필요 없다보니 그래도 생각했던대로 잘 작동을 하는것 같지만,
    이제 내일부터 하는 실제 api들은 훨씬 더 어렵고 복잡하고 코드 짜기가 쉽지 않을 것 같다.
    그리고 지금 연습하는것도 전체 코드의 일부분만 보고 연습하는거라 아직 전체적으로 코드에 대한 이해도가 많지 않아서 조금 더 전체적인 코드들에 대해서 깊히 이해할 필요가 있을 것 같다.

    퇴근하고서는 다시 한 번 코드들 세밀하게 들여다본 다음 좀 더 깊히 이해하고 공부하고 숙지하면 좋을 것 같다.

++++++++++++++++++++++
