++++++++++++++++++++++

    로그아웃 요청 시 요청 헤더에 쿠키가 담기지 않는 문제를 해결했다.
    문제는 요청 방법에 있었다.
    로그인 요청 시 get 요청을 사용했고, 첫번째 인자에 주소, 두번째 인자에 {withCredential: true} 옵션을 설정해줬었고,
    이와 마찬가지로 로그아웃 요청 시 post 요청을 사용했고, 첫번째 인자에 주소, 두번째 인자에 {withCredential: true} 옵션을 설정해줬었다.
    문제는 여기 있었다. 
    axios 요청 시 method 가 다르면 인자에 들어가는 각각의 필요사항들의 위치가 다르다는것이다.
    get 요청시에는 첫번째 인자가 주소, 두번째 인자가 옵션설정이 맞아서 정상정으로 작동했는데
    post 요청시에는 첫번째 인자가 주소, 두번째 인자가 보낼 데이터, 세번째 인자가 옵션설정이었다.
    지금까지 로그아웃 요청을 보낼때 post method 를 사용하면서 데이터가 들어갈 자리에 {withCredential: true} 옵션 설정을 해주고 계속 요청을 보냈으니 잘 될 리가 없었다.
    그래서 로그아웃 요청 시에는 따로 보낼 데이터가 없으니 빈 객체 {} 라도 설정해주고, 세번째 인자에 {withCredential: true} 옵션 설정을 해주고 요청을 보냈더니 정상적으로 잘 작동했다.
    이렇게 별거 아닌걸로, axios 요청 사용 방법만 잘 알고 했으면 이렇게 오래 시간 낭비 하지도 않는건데, 어쨌던 해결되서 다행이긴 하고 하나 더 배워간다 생각하면 다행이긴 하지만 시간 낭비한것 생각하면 정말 빡친다.

++++++++++++++++++++++

    카카오 로그인 관련 건우님과 얘기를 나눠봤고 어떤식으로 구현을 해볼지 생각을 해봤다.
    클라이언트에서 authcode를 받아서 서버로 넘겨주면, 서버에서 그 authcode로 토큰을 발급받고, 또 다시 서버에서 그 발급받은 토큰으로 유저 정보를 불러오고, 그 불러온 유저정보를 우리의 데이터베이스에 넣어 가입을 시키고, 로그인했을때처럼 그 데이터베이스에 등록된 유저 정보를 가지고 토큰을 만들어 쿠키에 담아 클라이언트로 넘겨주면 클라에선 유저 정보가 담긴 토큰을 담은 쿠키를 가지고 있으면서 로그인 상태 유지를 할 수 있게 된다. 로그아웃을 할때에는 동일하게 우리쪽으로 쿠키와 같이 요청이 올테니, 서버에선 전달받은 쿠키로 유저정보를 확인하고 데이터베이스에 있는 유저라면 쿠키를 지워 로그아웃을 할 수 있게 해준다.

    아직 회원탈퇴에 대해선 구현하지 않았지만 만약 카카오로 로그인한 사람이 회원탈퇴를 요청하게 되면 클라이언트에서 온 쿠키를 서버에서 전달받아 우선 해당하는 유저의 정보를 데이터베이스에서 지우고, 또 카카오로 요청을 보내 카카오에서 발급해준 토큰을 지우면 된다.

    이론상으론 문제가 없어보이나 어쨌던 코드를 작성해보고 구현해봐야 아는 일이고, 또 카카오로 로그인 한 사람에 대한 처리를 위해 따로 로직을 짜봐야 한다.

++++++++++++++++++++++

    

++++++++++++++++++++++