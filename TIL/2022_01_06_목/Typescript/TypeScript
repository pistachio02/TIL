++++++++++++++++++++++

    함수의 타입지정 관련 추가?

    그전 rest parameter 에 대해서 알아보자.

        function func(...param) {
            return;
        }

    위 함수를 보면 알겠지만 만약 함수의 인자로 전달되는 파라미터가 몇개가 들어올지 모르고 많이 들어올 것 같으면 위 방식처럼 ...param 이런식으로 이름은 상관 없지만 ...을 붙여서 표기하면 이게 rest parameter 가 되는것이다.

    기억해야 할 점은 만약 다른 파라미터가 같이 있다면 그 파라미터 맨 뒤에 붙여서 써야 한다는 점이다. 아래 예시와 같다.

        function func(param1, ...params) {
            return;
        }

    rest parameter 안에 들어오는 자료들은 전부 배열 []에 담아주게 된다.

    그렇다면 이러한 rest parameter 는 타입 지정을 어떻게 해야 할까? 아래와 같다.

        function func(...params :number[]) {
            console.log(a)
        }
    
    위에 설명했던것처럼 rest parameter는 들어오는 자료들을 배열에 담아주기 때문에 타입 지정도 배열처럼 해줘야 한다.

    ~~

    ... 이 사용되는 경우는 크게 두가지가 있다.

    첫번째는 spread operator, 프로젝트에서도 많이 사용했듯 구조분해 할당이다. 예시는 아래와 같다.

        let arr1 = [1, 2, 3];
        let arr2 = [4, 5, 6];
        let arr3 = [...arr1, ...arr2];

    위 방식대로 ...을 사용하면 쉽게 얘기해서 괄호를 벗겨주세요 라는 의미로 arr3 은 [1, 2, 3, 4, 5, 6] 이 된다.

    두번째는 아까 처음에 설명했던 것처럼 함수에서 사용하는 방법. 인자로 몇개의 자료가 들어올지 모를때 사용하면 된다.

    ~~

    destructuring?

        let arr = ["Hello", 42]

    라는 배열이 있을때 만약 그 배열 안에 있는 것들을 하나하나 꺼내서 쓰고싶다면 우리는 보통 아래와 같은 방법으로 했다.

        let one = arr[0]
        let two = arr[1]
    
    근데 만약 안에 들은 내용들의 엄청 많다면 코드가 길어지고 복잡해지게 된다. 이럴때는 어떻게 하면 좋을까?
    아래와 같다.

        let [ one, two ] = ["Hello", 42]
        // one === "Hello", two === 42

    위 방법대로 하게 되면 조금 더 간단하고 수월하게 배열 안에 있는 내용들을 꺼내서 쓸 수 있게 된다.
    이 방법 역시고 프로젝트에서 많이 사용했었다.

    객체도 마찬가지이다. 아래와 같은 방법으로 할 수 있다.

        let { student, age } = { student: true, age: 20 }
        // student === true, age === 20

    객체도 위 방법대로 간단하게 꺼내 쓸 수 있게 된다.
    좀 더 정확하게 쓰려고 한다면 아래와 같이 할 수 있다.

        let { student: student, age: age } = { student: true, age: 20 }

    이러한 방법들을 왜 알아야 하나? 아래와 같다.

    가끔 함수에 객체를 그대로 넣어서 쓰고 싶어하는 경우가 있다. 아래 예시를 보자.

        function func2(a, b) {
            console.log(a, b)
        }

    위와같은 함수가 있다고 했을때 인자로 들어오는 자료가 변수면 문제가 없을테지만 만약 어떠한 객체가 있고 그 객체 자체를 인자로 넣고싶다면 어떻게 해야할까? 아래와 같다.

        let obj = { student: true, age: 20 }

        function func2(a, b) {
            console.log(a, b)
        }

        func2(obj.student, obj.age)

    이렇게 일일이 지정해줘도 가능은 하다. 그치만 조금 더 편한 방법은 없을까? 아래와 같다.

        let obj = { student: true, age: 20 }

        function func2({ student, age }) {
            console.log(student, age)
        }

        func2(obj)

    위 방법대로 하면 함수를 가져다 쓸 때 따로 obj.student 나 obj.age 를 할 필요가 없이 그냥 obj 만 집어넣어도 가능하게 된다.

    그러면 이러한 경우 타입 지정은 어떻게 해줘야 하나?

    어차피 인자에 들어가는게 객체이기 때문에 객체에 타입 지정하는 방법대로 하면 된다. 아래와 같다.

        let obj = { student: true, age: 20 }

        function func2({ student, age } :{student : boolean, age : number}) {
            console.log(student, age)
        }

        func2(obj)

++++++++++++++++++++++
