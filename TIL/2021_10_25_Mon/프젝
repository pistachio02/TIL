++++++++++++++++++++++

    SR 피드백이 왔다.
    해당 사항을 보면서 최대한 수정해서 넣었다.
    피드백 온 내용들을 살펴보면 아래와 같다



    DB 스키마 관련해선,

    - Comments테이블의 user_nickname 이라는 FK는 왜 존재하는걸까요?
    - user_id라는 FK를 통해 User테이블의 정보를 받아오고, User테이블에는 nickname이라는 컬럼이 존재 하는데 왜 한번더 user_nickname이라는 FK를 만들어줬는지 궁금합니다.
    - Posts 테이블에 있는 user_nickname도 마찬가지 입니다.
    - Favorites 테이블의 sound 라는 FK의 이름은 sound_id가 좋을것 같습니다.
    - Favorites 테이블의 sound 라는 FK는 Sounds테이블의 PK(고유값)인 id와 연결되면 되지 않을까요?

    API 문서 관련해선,

    - `DELETE / signout` → 에러 발생 시 상태코드도 업데이트 해주세요. 토큰의 유효기간이 없거나, 알맞은 토큰이 아니거나, 토큰이 없다면 권한 에러를 나타내는 상태코드가 필요하겠죠?
    - `POST / login` 과 `POST / logout`은 `signin` `signout`으로 통일 된다면 좋겠습니다.
    - `POST / login` → `"JWT": "AccessToken"` 의 형식으로 넘오오고 있는데, 쿠키로 전달받는 것 아니었나요? ``
        - `"cookie" : { "accessToken" : "accessToken", "refreshToken" : "refreshToken" }` 과 같은 형식이 되어야 하지 않을까요?
    - `POST / logout` → 마찬가지로 에러 발생 시 상태코드를 업데이트 해주세요.
    - `PUT / password`, `PUT Nickname`
        - PUT 과 PACTH의 차이점에 대해 알고 계시나요?
            - 만약 알고 있다면 무엇 때문에 PUT을 사용하셨나요?
            - 모르고 계셨다면 [해당 링크](https://www.notion.so/3d2c7c2ceef348fc9d48ecdb1c920c26)의 **`REST 성숙도 모델 - 2단계`** 학습 후 알맞는 메소드를 사용하시기 바랍니다.
            - 굳이 두가지의 요청 처리가 필요할까요?  /userinfo 라는 엔드포인트 를 통해 한 번에 요청을 처리해도 되겠죠? 물론 코드를 만들때, password와 nickname 모두 바꾸는경우 혹은 한가지만 바꾸는 경우를 분기 처리 해야겠습니다.
            - 참고로, **엔드포인트 작성 시에는 동사, HTTP 메소드, 혹은 어떤 행위에 대한 단어 사용은 지양**하고, 리소스에 집중해 **명사 형태의 단어로 작성**하는 것이 바람직 방법입니다.
                - 위에 남겨드린 링크의 **`REST 성숙도 모델 - 1단계` 를 참조하시면 좋습니다.**
    - `GET` 요청 시에는 body대신 query parameter를 이용해주시기 바랍니다.
    - 거의 모든 요청에 에러 발생 시 상태코드 반환을 하지 않고 있습니다. 확인 하시고 반영 해주세요!
    - `GET / images` → 여러개의 이미지들을 string의 형태로 반환하나요? 배열 안에 넣어 준다면 더욱 깔끔해지겠죠?



    전체 항목을 하나하나 보면서 수정했고, 두가지 다 업데이트 해서 위키에 새로 올렸다.
    다만 api문서의 에러 발생 시 상태코드 반환을 하라고 하는데, 모든 요청에 어떠한 에러가 생길 줄 알고 상태 코드 반환을 하라고 하는지 이해가 되지 않았다.
    우선 에러 발생 시 상태코드 주라고 한 항목들에 대해선 다 수정을 했지만 나머지 항목들은 어떻게 수정하라는건지 모르겠다.
    
++++++++++++++++++++++

    ~~ 회의?

        - 로고는 장희님이 만드신것에서 회의를 거쳐 확정지었다. 곧 건우님이 만드신 랜딩페이지에 대입해서 확인 해 볼 수 있을 것 같다.
        - 전체적으로 SR 피드백에 대한 내용인데 뭔가...팀원들도 이해가 잘 안가는 부분들이 있었던 것 같다. 해서 피드백 내용대로 수정할것들은 수정하고 아닌것들은 우리가 생각했던대로 해보기로 했다. 
        - 우선 API 문서는 수정할 수 있는것들은 수정했고, DB 스키마도 수정했고, 그 외의 것들은 디자인적인 부분들은 애초에 하나로 픽스하고 한다고 해도 만들어보고 뭔가 바뀔수도 있는 것이기에 일단 따로 터치하지 않기로 했다.
        - 아이디어에 대해선 차별점이 었다고 하는데 애초에 뭔가 대단한 차별점이 있었으면 여기서 프로젝트로 하지도 않았다. 나중에 다 배우고 수료하고 나서 그때 아이디어로 언젠가 활용해보겠지, 지금부터 뭔가 대단한 아이디어로 해야 한다고 지적을 받는게 이상했다.
        - 서비스 소개는 나름 잘 적었다고 생각했는데 개조식으로 되어있지 않다고 지적받았다. 작성한 스타일을 개조식으로 조금 바꾸면 될 것 같다.
        - 소셜로그인 기능은 어드밴스트에서 베어미니멈으로 수정하면 될 것 같다.
        - 사운드와 이미지가 어디에 어떻게 저장되는지 표기하면 될 것 같다.
            (aws의 s3에 보관하고 그 링크를 DB에서 저장하는 형식이다.)
        - 팀룰 규칙에 대해선 커뮤니케이션과 관련된게 없다고 하니, 그와 관련된것들 몇개만 추가하면 될 것 같다. 예를 들면 매일 오후 5시에 정기적으로 회의를 한다 라던가, 각자 작업 시 문제가 발생했을때 바로바로 디코로 커뮤니케이션을 한다 라던가.
        - 태스크 카드는 오늘 대략 만들어 보면 될 것 같다.
        - 와이어프레임은 아까 말한대로 디자인적인 부분이라 그냥 넘어가기로 했다.
        
        
        회의롤 통해 나온 내용들은 대략 위 적은것들과 같다.
    
++++++++++++++++++++++