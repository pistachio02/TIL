++++++++++++++++++++++

    Rest Api?

    - REST API는 웹에서 사용되는 데이터나 자원(Resource)을 HTTP URI로 표현하고, HTTP 프로토콜을 통해서 요청과 응답을 정의하는 방식을 의미합니다.

    - Http Uri? 
        - 통합 자원 식별자로서 인터넷에 있는 자원을 나타내는 유일한 주소, 즉 쉽게 말해 우리가 흔히 사용하는 인터넷 주소를 의미합니다.

    - Http 프로토콜?
        - 인터넷상에서 데이터를 주고 받기 위한 서버/클라이언트 모델을 따르는 프로토콜을 의미합니다.

    - Restful Api?
        - 단계별로 총 4단계로 나뉠 수 있다.
        - 0단계는 http를 사용할때 만족됩니다. 단순히 http를 사용하기만 해도 0단계를 만족시켰다고 봅니다.
        - 1단계는 쉽게 말해, 모든 데이터 및 자원들은 각각의 개별 리소스에 맞는 엔드포인트를 사용해야 한다는것과, 요청하고 받은 자원에 대한 정보를 응답으로 전달해야 한다는것이 1단계에서 의미하는 바입니다.
        - 2단계는 CRUD에 맞게 적절한 HTTP 메소드를 사용하는 것에 중점을 둡니다. 보통 Rest 성숙도 모델의 2단계까지만 적용을 시키더라도 대체적으로 잘 작성된 Api라고 봅니다.
        - 마지막으로 3단계는, HATEOAS(Hypertext As The Engine Of Application State / 헤이티오스)라는 하이퍼미디어 컨트롤을 적용해야 합니다.
            - HATEOAS(헤이티오스)란 REST Api를 사용하는 클라이언트가 전적으로 서버와 동적인 상호작용이 가능하도록 하는 것을 의미하는데, 조금 더 쉽게 얘기하자면 클라이언트가 서버에게로 어떠한 요청을 보낼 때, 서버는 요청에 필요한 URI를 응답에 포함시켜 반환하는 것을 의미합니다. (간단한 예를 들자면, 우리가 어떠한 마사지샵 사이트에 들어가서 예약 가능한 시간들을 보기 위해 get 요청을 서버에게로 보낼때, 서버는 단순히 예약 가능한 시간들의 정보를 클라이언트에게로 반환하는것 뿐만 아니라, 우리가 예약 가능한 시간들을 보고난 후 원하는 시간에 예약을 할 수 있도록 예약을 할 수 있는 새로운 링크를 응답에 포함시켜서 반환한다거나, 예약을 하고 난 후 다시 해당 예약이 잘 되었는지를 확인할 수 있는 링크를 넣는다거나 하는것을 의미합니다.)

++++++++++++++++++++++

    위 적어놓은 것처럼 rest api 에 대해서 발표를 해보았다.
    생각보다 내 머릿속에 있는걸 그대로 상대방에게 이해하기 쉽게 설명한다는것이 쉽지 않다는걸 깨달았다.
    기본적으로 공부도 많이 해야할뿐더러 그 공부한것을 잘 설명하는 연습도 많이 해봐야 할 것 같다.
    복습 철저히 하고 새로운 공부도 많이 하자..

++++++++++++++++++++++