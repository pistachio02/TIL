알고리즘?
-> 어떠한 문제를 풀어맺기 위해 정해진 일련의 절차나 방법을 공식화한 형태로 표현한 것, 계산을 실행하기 위한 단계적 절차를 의미한다.
-> 코드스테이츠에서의 알고리즘이란 문제를 해결하는 최선의 선택.

Time Complexity? (시간복잡도?)
-> 빅-오 표기법?
    ㄴ> 최악의 경우를 고려. 어떠한 알고리즘을 풀때 빅오를 가장 많이 보편적으로 사용하는 이유는 다른 표기법에 비해 빅오 표기법은
        최악을 고려하기때문에 문제점을 파악하기에 빠르다. (최대 이정도까지 걸릴 수 있다.)

-> 빅-오메가 표기법?
    ㄴ> 최선의 경우를 고려. (최소 이정도 시간까지 걸린다.)

-> 빅-세타 표기법?
    ㄴ> 빅오와 빅오메가의 공통부분, 최선과 최악의 중간인 평균적인 복잡도를 고려. (보통 이정도의 시간이 걸릴 수 있다.)

빅오 시간복잡도 표기법엔 O(1) / O(log n) / O(n) / O(n2) / O(2n) 등이 있다.

Greedy Algorithm?
-> 그리디(욕심쟁이) 알고리즘이란 매 선택에서 지금 이 순간 당장 최적인 답을 선택하여 적합한 결과를 도출하자 라는 모토를 가지는 알고리즘 설계법.
-> 매 선택에 있어서 그 순간 가장 최적의 선택을 한다는게 꼭 항상 최적의 결과를 보장한다는 의미는 아니다. 이 점을 기억하자.
-> 하지만 어느 정도 최적에 가까운, 근사한 값을 빠르게 도출할 수 있는 장점이 있다.
